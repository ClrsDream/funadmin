<?php
/**
 * lemocms
 * ============================================================================
 * 版权所有 2018-2027 lemocms，并保留所有权利。
 * 网站地址: https://www.lemocms.com
 * ----------------------------------------------------------------------------
 * 采用最新Thinkphp6实现
 * ============================================================================
 * Author: yuege
 * Date: 2019/8/26
 */
namespace app\backend\controller\bbs;
use app\common\controller\Backend;
use app\common\model\BbsCate;
use app\common\traits\Curd;
use think\facade\Db;
use think\facade\Request;
use think\facade\View;
use lemo\helper\TreeHelper;
class Bbs extends  Backend {
    use Curd;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index(){

        if(Request::isPost()){
            $keys = $this->request->post('keys','','trim');
            $page = $this->request->post('page') ? $this->request->post('page') : 1;
            $list = Db::name('bbs')->alias('a')
                ->join('bbs_cate ac','a.pid = ac.id','left')
                ->field('a.*,ac.title as cate_name')
                ->where('a.title|a.content','like','%'.$keys.'%')
                ->order('a.sort desc,a.id desc')
                ->paginate(['list_rows' => $this->pageSize, 'page' => $page])
                ->toArray();
            return $result = ['code'=>0,'msg'=>lang('get info success'),'data'=>$list['data'],'count'=>$list['total']];

        }
        return view();

    }

    public function add(){
        if(Request::isPost()) {
            $data = $this->request->post();
            $model = new \app\common\model\Bbs();
            $res = $model->add($data);
            if ($res) {
                $this->success(lang('add success'));
            } else {
                $this->error(lang('add fail'));

            }
        }else{

            $BbsCate = BbsCate::where('status',1)->select()->toArray();
            $BbsCate= TreeHelper::cateTree($BbsCate);
            $params['name'] = 'container';
            $params['content'] = '';
            $view = [
                'info' => '',
                'BbsCate' => $BbsCate,
                'title' => lang('add'),
                'ueditor'=>build_ueditor($params),
            ];
            View::assign($view);
            return view('add');
        }
    }

    public function edit()
    {
        if(Request::isPost()){
            $data = $this->request->post();
            if(!$data['id']){
                $this->error(lang('invalid data'));
            }

            $model = new \app\common\model\Bbs();
            $res = $model->edit($data);
            if($res){
                $this->success(lang('edit success'));
            }else{
                $this->error(lang('edit fail'));

            }
        }else{
            $id =  Request::get('id');
            $BbsCate = BbsCate::where('status',1)->select()->toArray();
            $BbsCate= TreeHelper::cateTree($BbsCate);

            $info = \app\common\model\Bbs::find($id);
            $params['name'] = 'container';
            $params['content'] = $info['content'];
            $view = [
                'info' => $info,
                'BbsCate' => $BbsCate,
                'title' => lang('edit'),
                'ueditor'=>build_ueditor($params),
            ];
            View::assign($view);
            return view('add');
        }


    }

    public function state()
    {
        $id = $this->request->post('id');
        $data = $this->request->post();
        if ($id and isset($data['field'])) {
            $model = new \app\common\model\Bbs();
            $res = $model->state($data);
            $this->success(lang('edit success'));

        }
        $this->error('data not exist');


    }
    public function delete(){

        if(Request::isPost()){

            $id = $this->request->post('id');
            \app\common\model\Bbs::destroy($id);
            $this->success('delete success');
        }

    }

    public function cate(){
        if(Request::isPost()){
            $keys = $this->request->post('keys','','trim');
            $page = $this->request->post('page') ? $this->request->post('page') : 1;
            $list= cache('BbsCate');
            if(!$list) {
                $list = Db::name('bbs_cate')
                    ->where('title','like','%'.$keys.'%')
                    ->paginate(['list_rows' => $this->pageSize, 'page' => $page])
                    ->toArray();
                foreach($list['data'] as $k=>$v){
                    $list['data'][$k]['lay_is_open']=false;
                }
                cache('BbsCate', $list, 3600);
            }


            return $result = ['code'=>0,'msg'=>lang('get info success'),'data'=>$list['data'],'count'=>$list['total']];

        }
        return view();
    }

    public function cateAdd(){
        if(Request::isPost()) {
            $data = $this->request->post();
            $model = new \app\common\model\BbsCate();
            $res = $model->add($data);
            if ($res) {
                $this->success(lang('add success'));
            } else {
                $this->error(lang('add fail'));

            }
        }else{

            $BbsCate = BbsCate::where('status',1)->select()->toArray();
            $BbsCate= TreeHelper::cateTree($BbsCate);

            $view = [
                'info' => '',
                'BbsCate' => $BbsCate,
                'title' =>lang('add'),
            ];
            View::assign($view);
            return view('cate_add');
        }

    }
    public function cateEdit(){
        if(Request::isPost()){
            $data = $this->request->post();
            if(!$data['id']){
                $this->error(lang('invalid data'));
            }
            $model = new \app\common\model\BbsCate();
            $res = $model->edit($data);
            if($res){
                $this->success(lang('edit success'));
            }else{
                $this->error(lang('edit fail'));

            }
        }else{
            $id =  Request::get('id');
            $BbsCate = BbsCate::where('status',1)->select()->toArray();
            $BbsCate= TreeHelper::cateTree($BbsCate);

            $info = \app\common\model\BbsCate::find($id);

            $view = [
                'info' => $info,
                'BbsCate' => $BbsCate,
                'title' => lang('edit'),
            ];
            View::assign($view);
            return view('cate_add');
        }


    }

    public function cateState(){
        $data =  $this->request->post();
        $id = $this->request->post('id');
        if ($id and isset($data['field'])) {
            $model = new \app\common\model\BbsCate();
            $model->state($data);
            $this->success(lang('edit success'));

        }
        $this->error(lang('data not exist'));


    }
    public function cateDel(){

        if(Request::isPost()){

            $ids = $this->request->post('ids');
            $child = \app\common\model\BbsCate::where('pid','in',$ids)->find();
            if($child){
                $this->error(lang('delete child first'));
            }
            $model = new \app\common\model\BbsCate();
            if($model->del($ids)){
                $this->success(lang('delete success'));
            }else{
                $this->error(lang('delete fail'));
            }
        }

    }


}