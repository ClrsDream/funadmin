<?php
/**
 * lemocms
 * ============================================================================
 * 版权所有 2018-2027 lemocms，并保留所有权利。
 * 网站地址: https://www.lemocms.com
 * ----------------------------------------------------------------------------
 * 采用最新Thinkphp6实现
 * ============================================================================
 * Author: yuege
 * Date: 2019/8/2
 */

namespace app\bbs\controller;

use app\common\model\Bbs as BbsModel;
use app\common\model\BbsMessage;
use app\common\model\User;
use app\common\model\BbsCollect;
use app\common\model\BbsComment;
use app\common\model\BbsCommentLike;
use think\facade\View;

class Bbs extends Comm
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        $type = $this->request->get('type', '', 'trim');
        $pid = $this->request->get('pid', '', 'trim');
        $keywords = input('keywords');

        $where = [];
        if($pid){
            $where[]= ['pid','=',$pid];
        }
        if ($type == '0') {
           $where[] = ['is_solved','=',0];
        }
        if ($type == 1) {
            $where[] = ['is_solved','=',1];
        }
        if ($type == 2) {
            $where[] = ['is_fine','=',1];
        }
        if ($keywords) {
            $where[] = ['title|content','like','%'.$keywords.'%'];
        }

        $all = BbsModel::where('status', 1)
            ->where($where)
            ->withCount('comment')
            ->with([
                'cate' => function($query){
                    $query->where('status',1)->field('id,title');
                },
                'user' => function($query){
                    $query->field('id,username,avatar,level_id');
                }
            ])->order('id desc')
            ->paginate($this->pageSize,false,['query'=>$this->request->param()]);

        View::assign('all', $all);
        $this->getHots();
        return view();
    }



    //详情
    public function detail()
    {
        $id = $this->request->get('id');
        if($id){
            $list = BbsModel::withCount('comment')->with([
                'user' => function($query){
                $query->field('username,avatar');
            },
            ])->find($id);
            if($list){
                $comments = BbsComment::where('bbs_id',$id)->order('id desc')
                    ->withCount(['commLikes'])
                    ->with('user')
                    ->paginate($this->pageSize, false, ['query' => $this->request->param()]);

                $this->getHots();
                $list->inc('click')->update();
                View::assign('list', $list);
                View::assign('comments', $comments);
                return view();
            }else{
                $this->redirect(url('error/err'));

            }
        }else{
            $this->redirect(url('error/err'));
        }
    }
    //发布
    public function add()
    {
        if($this->request->isPost()){
            $data = input('post.','','trim');
            $this->LoginErr();
            $data['user_id'] = session('user.id');
            $captcha = $data['vercode'];
            if(!captcha_check($captcha)){
                $this->error('验证码错误');
            }
            if(!$data['id']){
                $res = BbsModel::create($data);
                $msg = '发布成功';
            }else{
                $msg = '编辑成功';
                $res = BbsModel::update($data);
            }
            if($res) {
                $this->success($msg,url('detail',['id'=>$res->id]));
            }else{
                $this->error('发布或编辑失败');
            }

        }
        $id = input('id');
        $list = [];
        if($id){
            $list = BbsModel::find($id);
        }
        View::assign('list',$list);
        return view();
    }


    //评论回复
    public function reply(){

        if(session('user')){
            $uid = session('user.id');
            $data = input('post.');
            $data['user_id'] = $uid;
            $data['is_read'] = 0;
            $data['is_adopt'] = 0;
            $content = $data['content'];
            $article = BbsModel::find($data['bbs_id']);
            if($article->status==0){
                $this->error('文章待审核，暂不能评论！');
            }
            $res = BbsComment::create($data);
            if($res){
                $mess = new BbsMessage();
                $patt = '/(@)(.+?)(\s)/';
                $users = [];
                if(preg_match_all($patt, $content, $mc)){
                    if ($mc[2]) {
                       foreach ($mc[2] as $k=>$v){
                           $users[$k] = User::where('username',$v)->find();
                       }
                       $users = array_filter(array_unique($users));
                    }
                }
                $data['type'] = 1;
                $data['content'] = '回复了您的文章';
                $data['receive_id'] = $article->user_id;
                $data['send_id'] = $uid;
                $mess->add($data);//发送消息
                if($users){
                    foreach ($users as $k=>$v){
                        $data['type'] = 2;
                        $data['content'] = '@了您';
                        $data['receive_id'] = $v->id;
                        $mess->add($data);//发送消息
                    }
                }
                $this->success('评论成功！');
            }else{
                $this->error('评论失败！');
            }
        }else{
            $this->error('请先登陆！',url('login/login'));
        }

    }


    //评论编辑
    public function getData(){
        $this->LoginErr();
        $id = input('id');
        $comms = BbsComment::find($id);
        $this->success('更新成功','',$comms);

    }
    //更新数据
    public function updateData(){
        $this->loginErr();

        $id = input('id');
        $content = input('content');
        $comms = BbsComment::find($id);
        $result = $comms->save(['content' => $content]);
        if($result) {
          $this->success('更新成功');
        } else {
            $this->error('更新失败');
        }

    }
    //点赞
    public function zan(){
        $ok = input('ok');
        $id = input('id');
        if(!session('user')){
            $this->error('请先登录',url('login/login'));
        }
        $uid = session('user.id');
        $like = BbsCommentLike::where('user_id',$uid)->where('comment_id',$id)->find();

        if($ok=='false'){
            if($like){
                $this->error('已经点赞了');
            }
            $data = [
                'user_id'=>$uid,
                'comment_id'=>$id,
            ];
            if( BbsCommentLike::create($data)){
                $comment = BbsComment::find($id);
                $comment->inc('like_num')->update();

                $this->success('点赞成功!');
            }else{
                $this->error('点赞失败！');
            }
        }else {

            if(BbsCommentLike::destroy($like->id)){
                $this->success('点赞成功!');
            }else{
                $this->error('点赞失败！');
            }
        }


    }


    //是否收藏
    public function is_collect(){
        $data['is_collect'] = 0;
        if(session('user')){
            $ar_id = input('cid');
            $uid = session('user.id');
            $collect = BbsCollect::where('bbs_id',$ar_id)->where('user_id',$uid)->find();
            if($collect){
                $data['is_collect'] = 1;
                $this->success('收藏','',$data);
            }else{
                $this->success('未收藏','',$data);

            }

        }else{
            $this->success('未收藏','',$data);
        }


    }

    public function collect(){
        if(session('user')){
            $data['bbs_id'] = input('cid');
            $data['user_id'] = session('user.id');
            if(BbsCollect::where($data)->find()){
                $this->error('已经收藏了');
            }
            $collect = BbsCollect::create($data);
            if($collect){
                $this->success('收藏成功');
            }else{
                $this->error('收藏失败');
            }


        }else{
            $this->error('请先登录',url('login/login'));
        }
    }

    public function uncollect(){
        if(session('user')){
            $data['bbs_id'] = input('cid');
            $data['user_id'] = session('user.id');
            $collect = BbsCollect::where($data)->delete();
            if($collect){
                $this->success('取消成功');
            }else{
                $this->error('取消失败');
            }
        }else{
            $this->error('请先登录');
        }
    }
    //评论删除
    public function comdel(){
        if(!session('user')){
            $this->error('请先登录',url('login/login'));
        }
        $id = input('id');
        BbsComment::destroy($id);
        $this->success('删除成功');
    }
    //文章设置
    public function bbs_set(){
        if(!session('user')){
            $this->error('请先登录',url('login/login'));
        }
        $rank = input('rank');
        if($rank==1){
            $rank = -1;
        }
        $id = input('id');
        $field = input('field');
        $info = BbsModel::find($id);
        $info->$field = $rank;
        $info->save();
        $this->success('申请成功');
    }
    public function bbs_delete(){
        if(!session('user')){
            $this->error('请先登录',url('login/login'));
        }
        $id = input('id');
        $ar = BbsModel::destroy($id);
        if($ar){
            $this->success('删除成功');
        }else{
            $this->error('删除失败');
        }
    }

    //采纳为最佳答案
    public function accept(){
        $id = input('id');
        $comment = BbsComment::find($id);

        if(!$comment) $this->error('评论不存在');
        if($comment->is_adopt == 1) $this->error('采纳失败,已经是最佳答案了');

        $comments = BbsComment::where('bbs_id',$comment->bbs_id)
            ->where('is_adopt',1)
            ->where('id','<>',$id)
            ->find();
        if($comments) $this->error('采纳失败,已经有最佳答案了');
        $rs = BbsComment::update(['is_adopt'=>1,'id'=>$id]);
        if($rs){

            $art = BbsModel::find($comment->bbs_id);
            $ar_user = User::find($art->user_id);
            if($art->score>0 && $ar_user->scores>=$art->score){
                $user = User::find($comment->user_id);
                $user->scores =  $user->scores+$art->score;//增加积分
                $ar_user->scores = $ar_user->scores-$art->score;//减少积分
                $user->force()->save();
                $ar_user->force()->save();
                $art->is_solved=1;
                $art->save();
                $this->success('采纳成功');
            }elseif($art->score !=0 && $ar_user->scores <$art->score){
                $this->error('采纳失败,L币不足');
            }elseif($art->score==0){
                $art->is_solved=1;//解决
                $art->save();//解决
                $this->success('采纳成功');
            }
        }else{
            $this->error('采纳失败');

        }


    }
    //搜索
    public function search()
    {

        $keywords = input('keywords');
        if(!empty($keywords)){
            $this->success('搜索成功');

        }else{
            $this->error('请输入关键词！');
        }
    }


}