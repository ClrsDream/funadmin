<?php
/**
 * lemocms
 * ============================================================================
 * 版权所有 2018-2027 lemocms，并保留所有权利。
 * 网站地址: https://www.lemocms.com
 * ----------------------------------------------------------------------------
 * 采用最新Thinkphp6实现
 * ============================================================================
 * Author: yuege
 * Date: 2019/9/21
 */


namespace app\bbs\controller;

use app\common\controller\Frontend;
use app\common\model\Addon;
use app\common\model\Bbs;
use app\common\model\BbsCate;
use app\common\model\BbsLink;
use think\facade\View;

class Comm extends Frontend
{
    public $BASE_URL= null;
    public $pageSize = 8;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $user = $this->isLogin();
        $this->link();
        $this->cates();
        $action = $this->request->action();
        $controller = $this->request->controller();
        //跨域
        if($_SERVER["HTTP_HOST"]==$_SERVER["SERVER_NAME"]){
            $BASE_URL = $this->get_http_type().$_SERVER["HTTP_HOST"].'/'.app('http')->getName();
        }else{
            $BASE_URL = $this->get_http_type().$_SERVER["HTTP_HOST"].'/';
        }
        $this->BASE_URL = $BASE_URL;
        View::assign('user', $user);
        View::assign('action', $action);
        View::assign('controller', $controller);
        View::assign('BASE_URL', $BASE_URL);
        $config = Addon::where('name','bbs')->value('status');
        if($config==0){
            $this->redirect(url('Error/notice'));
        }
    }

    protected function link(){
        $link =  BbsLink::getlink();
        View::assign('link',$link);
    }

    protected function cates(){
        $cates =  BbsCate::getList();
        View::assign('cates',$cates);

    }

        //是否登录
    public function isLogin(){
        if(session('user.id')){
            return  session('user');
        }else{
            return false;
        }
    }

    //未登录跳转
    public function LoginErr(){
        if(!session('user')) {
            $this->error('请先登录',url('login/login'));
        }
    }


    //热门
    protected function getHots(){
        $hots =  Bbs::where('status',1)
            ->withCount('comment')
            ->whereWeek('create_time')->order('comment_count desc')->limit(10)->select();

        View::assign('hots',$hots);
    }
    //置顶
    protected function getTop(){

        //置顶文章
        $top =  Bbs::where('status',1)
            ->where('is_top',1)->withCount(['comment'])
            ->with(['user' => function($query){
                $query->field('id,username,avatar,level_id');
            }])->order('create_time desc')->limit(5)->select();
        View::assign('top',$top);
    }

    //获取http类型
    protected function get_http_type(){

        return $http_type = ((isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] == 'on') || (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https')) ? 'https://' : 'http://';

    }

}