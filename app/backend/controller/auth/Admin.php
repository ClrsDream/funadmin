<?php
/**
 * SpeedAdmin
 * ============================================================================
 * 版权所有 2018-2027 SpeedAdmin，并保留所有权利。
 * 网站地址: https://www.SpeedAdmin.cn
 * ----------------------------------------------------------------------------
 * 采用最新Thinkphp6实现
 * ============================================================================
 * Author: yuege
 * Date: 2019/8/2
 */
namespace app\backend\controller\auth;

use app\backend\model\AuthGroup as AuthGroupModel;
use app\common\controller\Backend;
use app\common\traits\Curd;
use speed\helper\SignHelper;
use speed\helper\StringHelper;
use think\facade\Db;
use think\facade\Request;
use think\facade\View;
use app\backend\model\Admin as AdminModel;
use think\App;
class Admin extends Backend
{
    use Curd;
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

    }

    public function __construct(App $app)
    {
        parent::__construct($app);
        $this->modelClass = new AdminModel();
    }
    /*-----------------------管理员管理----------------------*/
    // 管理员列表
    public function index()
    {
        if($this->request->isAjax()){
            list($this->page, $this->pageSize,$sort,$where) = $this->buildParames();
            $count = $this->modelClass
                ->where($where)
                ->order($sort)
                ->count();
            $list =$this->modelClass->where($where)
                ->with('authGroup')
                ->order($sort)
                ->page($this->page  ,$this->pageSize)
                ->select();
            $result = ['code'=>0,'msg'=>lang('get formData success'),'data'=>$list,'count'=>$count];
            return json($result);
        }

        return view();
    }

    // 管理员添加
    public function add()
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();
            try{
                $this->validate($data, 'Admin');
            }catch (\ValidateException $e){
                $this->error($e->getMessage());
            }
            $data['password'] = StringHelper::filterWords($data['password']);
            if(!$data['password']){
                $data['password']='123456';
            }
            $data['password'] = password_hash($data['password'],PASSWORD_BCRYPT, SignHelper::passwordSalt());
            //添加

            $result = $this->modelClass->save($data);
            if ($result) {
                $this->success(lang('Add Success'));
            } else {
                $this->error(lang('Add Failed'));
            }
        }
        $list = '';
        $auth_group = AuthGroupModel::where('status', 1)->select();
        $view = [
            'formData'  =>$list,
            'authGroup' => $auth_group,
            'title' => lang('Add'),
        ];
        View::assign($view);
        return view();

    }

    // 管理员添加
    public function edit()
    {
        if ($this->request->isPost()) {
            $data = $this->request->post();
            try{
                $this->validate($data, 'Admin');
            }catch (\ValidateException $e){
                $this->error($e->getMessage());
            }
            $data['password'] = StringHelper::filterWords($data['password']);
            if(!$data['password']){
                $data['password']='123456';
            }
            $data['password'] = password_hash($data['password'],PASSWORD_BCRYPT, SignHelper::passwordSalt());
            //添加
            $list =  $this->modelClass->find($data['id']);
            $result = $list->save($data);
            if ($result) {
                $this->success(lang('Add Success'));
            } else {
                $this->error(lang('Add Failed'));
            }
        }
        $list =  $this->modelClass->find($this->request->param('id'));
        $auth_group = AuthGroupModel::where('status', 1)->select();
        $view = [
            'formData'  =>$list,
            'authGroup' => $auth_group,
            'title' => lang('Add'),
        ];
        View::assign($view);
        return view('add');

    }


    // 管理员删除
    public function delete()
    {
        $ids = $this->request->post('ids');
        if (!empty($ids)) {
            foreach ($ids as $k=>$id) {
                if($id==1){
                    unset($ids[$k]);
                }
                $list = $this->modelClass->find($id);
                $list->delete();
            }
            $this->success(lang('Delete success'));
        } else {
            $this->error(lang('SupperAdmin can not delete'));

        }
    }

    /********************************权限管理*******************************/
    // 权限列表
    public function adminRule()
    {
        if($this->request->isAjax()){
            $uid = $this->uid;

            $arr = Db::name('auth_rule')
                ->order('pid asc,sort asc')
                ->select()->toArray();
            foreach($arr as $k=>$v){
                $arr[$k]['lay_is_open']=false;
            }
            cache('authRuleList_'.$uid, $arr, 3600);

            return $result = ['code'=>0,'msg'=>lang('get formData success'),'data'=>$arr,'is'=>true,'tip'=>'操作成功'];
        }
        return view('admin_rule');
    }
}